#!/bin/bash    
# Usage: ./ranger.job NCORES
# Note: NCORES must be a power of 2 greater than or equal to 16 (machine restrictions)

# Get the number of cores from command line
NCORES=$1

# compute dimensions for large problem size (~.5 GB/node)
log(){ local x=$1 n=2 l=-1;if [ "$2" != "" ];then n=$x;x=$2;fi;while((x));do let l+=1 x/=n;done;echo $l; }
arg=`log 4 ${NCORES}`
let "tmp = 4 ** ${arg}"
if [ ${tmp} != ${NCORES} ]; then
  let "rows = 2 ** ${arg} * 8192"
  let "cols = 2 ** ${arg} * 8192 * 2"
else
  let "rows = 2 ** ${arg} * 8192"
  let "cols = 2 ** ${arg} * 8192"
fi

# Compile executable
mpicc -o homb.ex -O3 -mp=numa src/homb.c

#
for (( nt = 1; nt <= 16; nt *= 2))
do
  let "np = ${NCORES} / ${nt}"
  let "way = 16 / ${nt}"

  echo "#!/bin/bash " > sub.job
  echo "#$ -V " >> sub.job
  echo "#$ -cwd " >> sub.job
  echo "#$ -j y " >> sub.job
  echo "#$ -N HOMB-${np}-${nt} " >> sub.job
  echo "#$ -o $""JOB_NAME.o""$""JOB_ID " >> sub.job
  echo "#$ -pe ${way}way ${NCORES} " >> sub.job
  echo "#$ -q normal " >> sub.job
  echo "#$ -l h_rt=00:30:00 " >> sub.job
  echo " " >> sub.job
  echo "set -x " >> sub.job
  echo "export MV2_ENABLE_AFFINITY=0 " >> sub.job
  echo "export OMP_NUM_THREADS=1 " >> sub.job
  echo "ibrun -np 1 ./homb.ex -NRC 8192 -NITER 10 -s > homb-${np}-${nt}.out " >> sub.job
  echo "export OMP_NUM_THREADS=${nt} " >> sub.job
  echo -e "export OMP_SCHEDULE=\"guided,8\" " >> sub.job
  echo "ibrun -np ${np} ./homb.ex -NR ${rows} -NC ${cols} -NITER 100 -s -nh >> homb-${np}-${nt}.out " >> sub.job
  echo " " >> sub.job
  echo -e "echo \"\" >> homb.archive " >> sub.job
  echo "date >> homb.archive " >> sub.job
  echo "cat homb-${np}-${nt}.out >> homb.archive " >> sub.job

  qsub sub.job
done

